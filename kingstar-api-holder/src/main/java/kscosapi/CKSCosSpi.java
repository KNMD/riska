package kscosapi;
import ksuserapistructex.CThostFtdcRspInfoField;
import ksvocapistruct.CKSCOSAskSelectField;
import ksvocapistruct.CKSCOSStatusField;
import ksvocapistruct.CKSConditionalOrderOperResultField;
import ksvocapistruct.CKSConditionalOrderRspResultField;
import ksvocapistruct.CKSPLStatusField;
import ksvocapistruct.CKSProfitAndLossOrderOperResultField;
import ksvocapistruct.CKSProfitAndLossOrderRemoveField;
import org.bridj.Pointer;
import org.bridj.ann.Library;
import org.bridj.ann.Virtual;
import org.bridj.cpp.CPPObject;
/**
 * <i>native declaration : KSCosApi.h:22</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("KSCosApi") 
public class CKSCosSpi extends CPPObject {
	public CKSCosSpi() {
		super();
	}
	/**
	 * \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u00bc\ufffd\ufffd\ufffd\ufffd\u04e6<br>
	 * Original signature : <code>void OnRspInitInsertConditionalOrder(CKSConditionalOrderOperResultField*, CThostFtdcRspInfoField*, int, bool)</code><br>
	 * <i>native declaration : KSCosApi.h:26</i>
	 */
	@Virtual(0) 
	public native void OnRspInitInsertConditionalOrder(Pointer<CKSConditionalOrderOperResultField > pInitInsertConditionalOrder, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast);
	/**
	 * \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u046f\ufffd\ufffd\u04e6<br>
	 * Original signature : <code>void OnRspQueryConditionalOrder(CKSConditionalOrderOperResultField*, CThostFtdcRspInfoField*, int, bool)</code><br>
	 * <i>native declaration : KSCosApi.h:29</i>
	 */
	@Virtual(1) 
	public native void OnRspQueryConditionalOrder(Pointer<CKSConditionalOrderOperResultField > pQueryConditionalOrder, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast);
	/**
	 * \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u07b8\ufffd\ufffd\ufffd\u04e6<br>
	 * Original signature : <code>void OnRspModifyConditionalOrder(CKSConditionalOrderOperResultField*, CThostFtdcRspInfoField*, int, bool)</code><br>
	 * <i>native declaration : KSCosApi.h:32</i>
	 */
	@Virtual(2) 
	public native void OnRspModifyConditionalOrder(Pointer<CKSConditionalOrderOperResultField > pModifyConditionalOrder, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast);
	/**
	 * \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0363\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u04e6<br>
	 * Original signature : <code>void OnRspPauseConditionalOrder(CKSConditionalOrderOperResultField*, CThostFtdcRspInfoField*, int, bool)</code><br>
	 * <i>native declaration : KSCosApi.h:35</i>
	 */
	@Virtual(3) 
	public native void OnRspPauseConditionalOrder(Pointer<CKSConditionalOrderOperResultField > pPauseConditionalOrder, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast);
	/**
	 * \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u027e\ufffd\ufffd\ufffd\ufffd\u04e6<br>
	 * Original signature : <code>void OnRspRemoveConditionalOrder(CKSConditionalOrderRspResultField*, CThostFtdcRspInfoField*, int, bool)</code><br>
	 * <i>native declaration : KSCosApi.h:38</i>
	 */
	@Virtual(4) 
	public native void OnRspRemoveConditionalOrder(Pointer<CKSConditionalOrderRspResultField > pRemoveConditionalOrder, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast);
	/**
	 * \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0461\ufffd\ufffd\ufffd\ufffd\u04e6<br>
	 * Original signature : <code>void OnRspSelectConditionalOrder(CKSConditionalOrderRspResultField*, CThostFtdcRspInfoField*, int, bool)</code><br>
	 * <i>native declaration : KSCosApi.h:41</i>
	 */
	@Virtual(5) 
	public native void OnRspSelectConditionalOrder(Pointer<CKSConditionalOrderRspResultField > pSelectConditionalOrder, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast);
	/**
	 * \u05b9\ufffd\ufffd\u05b9\u04ef\ufffd\ufffd\u00bc\ufffd\ufffd\ufffd\ufffd\u04e6<br>
	 * Original signature : <code>void OnRspInsertProfitAndLossOrder(CKSProfitAndLossOrderOperResultField*, CThostFtdcRspInfoField*, int, bool)</code><br>
	 * <i>native declaration : KSCosApi.h:44</i>
	 */
	@Virtual(6) 
	public native void OnRspInsertProfitAndLossOrder(Pointer<CKSProfitAndLossOrderOperResultField > pInsertProfitAndLossOrder, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast);
	/**
	 * \u05b9\ufffd\ufffd\u05b9\u04ef\ufffd\ufffd\ufffd\u07b8\ufffd\ufffd\ufffd\u04e6<br>
	 * Original signature : <code>void OnRspModifyProfitAndLossOrder(CKSProfitAndLossOrderOperResultField*, CThostFtdcRspInfoField*, int, bool)</code><br>
	 * <i>native declaration : KSCosApi.h:47</i>
	 */
	@Virtual(7) 
	public native void OnRspModifyProfitAndLossOrder(Pointer<CKSProfitAndLossOrderOperResultField > pModifyProfitAndLossOrder, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast);
	/**
	 * \u05b9\ufffd\ufffd\u05b9\u04ef\ufffd\ufffd\u027e\ufffd\ufffd\ufffd\ufffd\u04e6<br>
	 * Original signature : <code>void OnRspRemoveProfitAndLossOrder(CKSProfitAndLossOrderRemoveField*, CThostFtdcRspInfoField*, int, bool)</code><br>
	 * <i>native declaration : KSCosApi.h:50</i>
	 */
	@Virtual(8) 
	public native void OnRspRemoveProfitAndLossOrder(Pointer<CKSProfitAndLossOrderRemoveField > pRemoveProfitAndLossOrder, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast);
	/**
	 * \u05b9\ufffd\ufffd\u05b9\u04ef\ufffd\ufffd\ufffd\ufffd\u046f\ufffd\ufffd\u04e6<br>
	 * Original signature : <code>void OnRspQueryProfitAndLossOrder(CKSProfitAndLossOrderOperResultField*, CThostFtdcRspInfoField*, int, bool)</code><br>
	 * <i>native declaration : KSCosApi.h:53</i>
	 */
	@Virtual(9) 
	public native void OnRspQueryProfitAndLossOrder(Pointer<CKSProfitAndLossOrderOperResultField > pQueryProfitAndLossOrder, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast);
	/**
	 * \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0461\ufffd\ufffd\u0368\u05aa<br>
	 * Original signature : <code>void OnRtnCOSAskSelect(CKSCOSAskSelectField*)</code><br>
	 * <i>native declaration : KSCosApi.h:56</i>
	 */
	@Virtual(10) 
	public native void OnRtnCOSAskSelect(Pointer<CKSCOSAskSelectField > pCOSAskSelect);
	/**
	 * \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u05f4\u032c\u0368\u05aa<br>
	 * Original signature : <code>void OnRtnCOSStatus(CKSCOSStatusField*)</code><br>
	 * <i>native declaration : KSCosApi.h:59</i>
	 */
	@Virtual(11) 
	public native void OnRtnCOSStatus(Pointer<CKSCOSStatusField > pCOSStatus);
	/**
	 * \u05b9\ufffd\ufffd\u05b9\u04ef\ufffd\ufffd\u05f4\u032c\u0368\u05aa<br>
	 * Original signature : <code>void OnRtnPLStatus(CKSPLStatusField*)</code><br>
	 * <i>native declaration : KSCosApi.h:62</i>
	 */
	@Virtual(12) 
	public native void OnRtnPLStatus(Pointer<CKSPLStatusField > pPLStatus);
	public CKSCosSpi(Pointer pointer) {
		super(pointer);
	}
}
