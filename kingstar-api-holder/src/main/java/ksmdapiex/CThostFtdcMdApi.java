package ksmdapiex;
import ksuserapistructex.CThostFtdcFensUserInfoField;
import ksuserapistructex.CThostFtdcReqUserLoginField;
import ksuserapistructex.CThostFtdcUserLogoutField;
import ksvocapidatatype.KSVocApiDataTypeLibrary.KS_EXTAPI_TYPE;
import org.bridj.IntValuedEnum;
import org.bridj.Pointer;
import org.bridj.ann.Library;
import org.bridj.ann.Virtual;
import org.bridj.cpp.CPPObject;
/**
 * <i>native declaration : KSMdApiEx.h:67</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("libksmarketdataapi")
public class CThostFtdcMdApi extends CPPObject {
	public CThostFtdcMdApi() {
		super();
	}
	/**
	 * modify for udp marketdata<br>
	 * Original signature : <code>CThostFtdcMdApi* CreateFtdcMdApi(const char*, const bool, const bool)</code><br>
	 * <i>native declaration : KSMdApiEx.h:74</i>
	 */
	public static native Pointer<CThostFtdcMdApi > CreateFtdcMdApi(Pointer<Byte > pszFlowPath, boolean bIsUsingUdp, boolean bIsMulticast);
	/**
	 * @retrun \ufffd\ufffd\u0221\ufffd\ufffd\ufffd\u0130\u6c7e\ufffd\ufffd<br>
	 * Original signature : <code>char* GetApiVersion()</code><br>
	 * <i>native declaration : KSMdApiEx.h:78</i>
	 */
	public static native Pointer<Byte > GetApiVersion();
	/**
	 * @remark \ufffd\ufffd\ufffd\ufffd\u02b9\ufffd\u00f1\ufffd\ufffd\u04ff\u06b6\ufffd\ufffd\ufffd\u02b1,\ufffd\ufffd\ufffd\u00f8\u00fa\ufffd\ufffd\ufffd\u027e\ufffd\ufffd\u04ff\u06b6\ufffd\ufffd\ufffd<br>
	 * Original signature : <code>void Release()</code><br>
	 * <i>native declaration : KSMdApiEx.h:82</i>
	 */
	@Virtual(0) 
	public native void Release();
	/**
	 * @remark \ufffd\ufffd\u02bc\ufffd\ufffd\ufffd\ufffd\ufffd\u043b\ufffd\ufffd\ufffd,\u05bb\ufffd\u0435\ufffd\ufffd\u00fa\ufffd,\ufffd\u04ff\u06b2\u017f\ufffd\u02bc\ufffd\ufffd\ufffd\ufffd<br>
	 * Original signature : <code>void Init()</code><br>
	 * <i>native declaration : KSMdApiEx.h:86</i>
	 */
	@Virtual(1) 
	public native void Init();
	/**
	 * @return \ufffd\u07f3\ufffd\ufffd\u02f3\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * Original signature : <code>int Join()</code><br>
	 * <i>native declaration : KSMdApiEx.h:90</i>
	 */
	@Virtual(2) 
	public native int Join();
	/**
	 * @remark \u05bb\ufffd\u0435\ufffd\u00bc\ufffd\u0279\ufffd\ufffd\ufffd,\ufffd\ufffd\ufffd\u0735\u00f5\ufffd\ufffd\ufffd\u0237\ufffd\u013d\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * Original signature : <code>char* GetTradingDay()</code><br>
	 * <i>native declaration : KSMdApiEx.h:95</i>
	 */
	@Virtual(3) 
	public native Pointer<Byte > GetTradingDay();
	/**
	 * @remark \ufffd\ufffdtcp\ufffd\ufffd\ufffd\ufffd\udd2b\ufffd\ufffd\u042d\ufffd\u98ec\ufffd\ufffd127.0.0.1\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u05b7\ufffd\ufffd\ufffd\ufffd17001\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u02ff\u06ba\u0161\ufffd<br>
	 * Original signature : <code>void RegisterFront(char*)</code><br>
	 * <i>native declaration : KSMdApiEx.h:101</i>
	 */
	@Virtual(4) 
	public native void RegisterFront(Pointer<Byte > pszFrontAddress);
	/**
	 * @remark RegisterNameServer\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdRegisterFront<br>
	 * Original signature : <code>void RegisterNameServer(char*)</code><br>
	 * <i>native declaration : KSMdApiEx.h:108</i>
	 */
	@Virtual(5) 
	public native void RegisterNameServer(Pointer<Byte > pszNsAddress);
	/**
	 * @param pFensUserInfo\ufffd\ufffd\ufffd\u00fb\ufffd\ufffd\ufffd\u03e2\ufffd\ufffd<br>
	 * Original signature : <code>void RegisterFensUserInfo(CThostFtdcFensUserInfoField*)</code><br>
	 * <i>native declaration : KSMdApiEx.h:112</i>
	 */
	@Virtual(6) 
	public native void RegisterFensUserInfo(Pointer<CThostFtdcFensUserInfoField > pFensUserInfo);
	/**
	 * @param pSpi \ufffd\ufffd\ufffd\ufffd\ufffd\u053b\u0635\ufffd\ufffd\u04ff\ufffd\ufffd\ufffd\ufffd\u02b5\ufffd\ufffd<br>
	 * Original signature : <code>void RegisterSpi(CThostFtdcMdSpi*)</code><br>
	 * <i>native declaration : KSMdApiEx.h:116</i>
	 */
	@Virtual(7) 
	public native void RegisterSpi(Pointer<CThostFtdcMdSpi > pSpi);
	/**
	 * @remark<br>
	 * Original signature : <code>int SubscribeMarketData(char*[], int)</code><br>
	 * <i>native declaration : KSMdApiEx.h:122</i>
	 */
	@Virtual(8) 
	public native int SubscribeMarketData(Pointer<Pointer<Byte > > ppInstrumentID, int nCount);
	/**
	 * @remark<br>
	 * Original signature : <code>int UnSubscribeMarketData(char*[], int)</code><br>
	 * <i>native declaration : KSMdApiEx.h:128</i>
	 */
	@Virtual(9) 
	public native int UnSubscribeMarketData(Pointer<Pointer<Byte > > ppInstrumentID, int nCount);
	/**
	 * @remark<br>
	 * Original signature : <code>int SubscribeForQuoteRsp(char*[], int)</code><br>
	 * <i>native declaration : KSMdApiEx.h:134</i>
	 */
	@Virtual(10) 
	public native int SubscribeForQuoteRsp(Pointer<Pointer<Byte > > ppInstrumentID, int nCount);
	/**
	 * @remark<br>
	 * Original signature : <code>int UnSubscribeForQuoteRsp(char*[], int)</code><br>
	 * <i>native declaration : KSMdApiEx.h:140</i>
	 */
	@Virtual(11) 
	public native int UnSubscribeForQuoteRsp(Pointer<Pointer<Byte > > ppInstrumentID, int nCount);
	/**
	 * \ufffd\u00fb\ufffd\ufffd\ufffd\u00bc\ufffd\ufffd\ufffd\ufffd<br>
	 * Original signature : <code>int ReqUserLogin(CThostFtdcReqUserLoginField*, int)</code><br>
	 * <i>native declaration : KSMdApiEx.h:143</i>
	 */
	@Virtual(12) 
	public native int ReqUserLogin(Pointer<CThostFtdcReqUserLoginField > pReqUserLoginField, int nRequestID);
	/**
	 * \ufffd\u01f3\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * Original signature : <code>int ReqUserLogout(CThostFtdcUserLogoutField*, int)</code><br>
	 * <i>native declaration : KSMdApiEx.h:146</i>
	 */
	@Virtual(13) 
	public native int ReqUserLogout(Pointer<CThostFtdcUserLogoutField > pUserLogout, int nRequestID);
	/**
	 * \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0579API\u02b5\ufffd\ufffd<br>
	 * Original signature : <code>void* LoadExtMdApi(void*, KS_EXTAPI_TYPE)</code><br>
	 * <i>native declaration : KSMdApiEx.h:149</i>
	 */
	@Virtual(14) 
	public native Pointer<? > LoadExtMdApi(Pointer<? > pSpi, IntValuedEnum<KS_EXTAPI_TYPE > nExtApiType);
	public CThostFtdcMdApi(Pointer pointer) {
		super(pointer);
	}
}
